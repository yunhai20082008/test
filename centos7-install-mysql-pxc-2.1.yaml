---

- hosts: all
  become: true
  tasks:
    - name: centos7 install epel
      ansible.builtin.yum:
        name: epel-release
        state: present

    - name: Centos7 install percona repo
      ansible.builtin.yum:
        name: https://repo.percona.com/yum/percona-release-latest.noarch.rpm
        state: present

    - name: Centos7 enable percona rps-80
      ansible.builtin.shell: percona-release enable-only ps-80 release

    - name: Centos7 enable percona tools
      ansible.builtin.shell: percona-release enable tools release

    - name: centos7 install zstd
      ansible.builtin.yum:
        name: zstd
        state: present

    - name: centos7 install percona-xtrabackup-80
      ansible.builtin.yum:
        name: percona-xtrabackup-80
        state: present

    - name: centos7 install qpress
      ansible.builtin.yum:
        name: qpress
        state: present

    # - name: Download file from a file path
    #   get_url:
    #     url: http://192.168.20.251:8080/Percona-XtraDB-Cluster-8.0.36-rbfb687f-el7-x86_64-bundle.tar
    #     dest: /vagrant/Percona-XtraDB-Cluster.tar

    - name: Creat tmp
      ansible.builtin.file:
        path: /home/vagrant/tmp
        state: directory
        mode: '0755'

    - name: Untar Percona-XtraDB-Cluster.tar
      ansible.builtin.unarchive:
        copy: false
        # creates: /home/vagrant/tmp
        mode: 0755
        src: /vagrant/vagrant/Percona-XtraDB-Cluster-8.0.36-rbfb687f-el7-x86_64-bundle.tar
        dest: /home/vagrant/tmp

    - name: Centos7 install Percona-XtraDB-Cluster
      ansible.builtin.shell: rpm -i /home/vagrant/tmp/*.rpm --nodeps --force

    - name: centos7 install MySQL-python
      ansible.builtin.yum:
        name: MySQL-python
        state: present

    - name: stop mysql
      ansible.builtin.systemd:
        name: mysqld
        state: stopped
        enabled: true

    - name: Debug
      debug:
        msg: "{{ ansible_hostname }}"

    - name: Configure SELinux to permissive mode
      lineinfile:
        path: /etc/selinux/config
        regexp: '^SELINUX='
        line: SELINUX=permissive
      when: ansible_selinux.status != 'permissive'

    - name: Restart the machine to ensure SELinux is in permissive mode
      reboot:
      when: ansible_selinux.status != 'permissive'
